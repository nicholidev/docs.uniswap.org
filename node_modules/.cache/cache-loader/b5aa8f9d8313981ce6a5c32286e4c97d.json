{"remainingRequest":"/Users/Connor/Uniswap/uniswap-docs/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/Connor/Uniswap/uniswap-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/Connor/Uniswap/uniswap-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/Connor/Uniswap/uniswap-docs/docs/guides/smart-contract-integration/04-building-an-oracle.md","dependencies":[{"path":"/Users/Connor/Uniswap/uniswap-docs/docs/guides/smart-contract-integration/04-building-an-oracle.md","mtime":1613751914828},{"path":"/Users/Connor/Uniswap/uniswap-docs/.docusaurus/docusaurus-plugin-content-docs/docs/site-docs-guides-smart-contract-integration-04-building-an-oracle-md-833.json","mtime":1613751914786},{"path":"/Users/Connor/Uniswap/uniswap-docs/node_modules/cache-loader/dist/cjs.js","mtime":1613486809327},{"path":"/Users/Connor/Uniswap/uniswap-docs/node_modules/babel-loader/lib/index.js","mtime":1613486809014},{"path":"/Users/Connor/Uniswap/uniswap-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1613486826947},{"path":"/Users/Connor/Uniswap/uniswap-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1613486826420}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/Connor/Uniswap/uniswap-docs/docs/guides/smart-contract-integration/04-building-an-oracle.md"],"names":["React","mdx","frontMatter","id","title","tags","metadata","toc","value","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","Github","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: '04-building-an-oracle',\n\ttitle: 'Building an Oracle',\n\ttags: 'oracles, documentation'\n};\nexport const metadata = {\n  \"unversionedId\": \"guides/smart-contract-integration/04-building-an-oracle\",\n  \"id\": \"guides/smart-contract-integration/04-building-an-oracle\",\n  \"isDocsHomePage\": false,\n  \"title\": \"Building an Oracle\",\n  \"description\": \"To build a price oracle on Uniswap V2, you must first understand the\",\n  \"source\": \"@site/docs/guides/smart-contract-integration/04-building-an-oracle.md\",\n  \"slug\": \"/guides/smart-contract-integration/04-building-an-oracle\",\n  \"permalink\": \"/docs/guides/smart-contract-integration/04-building-an-oracle\",\n  \"editUrl\": \"https://github.com/docs/guides/smart-contract-integration/04-building-an-oracle.md\",\n  \"version\": \"current\",\n  \"sidebar\": \"guides\",\n  \"previous\": {\n    \"title\": \"Providing Liquidity\",\n    \"permalink\": \"/docs/guides/smart-contract-integration/03-providing-liquidity\"\n  },\n  \"next\": {\n    \"title\": \"Flash Swaps\",\n    \"permalink\": \"/docs/guides/smart-contract-integration/05-using-flash-swaps\"\n  }\n};\n  /* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const toc = [{\n  value: 'Fixed windows',\n  id: 'fixed-windows',\n  children: []\n}, {\n  value: 'Moving averages',\n  id: 'moving-averages',\n  children: []\n}, {\n  value: 'Computing average prices',\n  id: 'computing-average-prices',\n  children: []\n}, {\n  value: 'Integrating the oracle',\n  id: 'integrating-the-oracle',\n  children: []\n}, {\n  value: 'Oracle maintenance',\n  id: 'oracle-maintenance',\n  children: []\n}, {\n  value: 'No-maintenance option',\n  id: 'no-maintenance-option',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Github = makeShortcode(\"Github\");\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`To build a price oracle on Uniswap V2, you must first understand the\nrequirements for your use case. Once you understand the kind of price\naverage you require, it is a matter of storing the cumulative price\nvariable from the pair as often as necessary, and computing\nthe average price using two or more observations of the\ncumulative price variables.`}</p>\n    <h1 {...{\n      \"id\": \"understanding-requirements\"\n    }}>{`Understanding requirements`}</h1>\n    <p>{`To understand your requirements, you should first research the answer to the\nfollowing questions:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Is data freshness important?\nI.e.: must the price average include the current price?`}</li>\n      <li parentName=\"ul\">{`Are recent prices more important than historical prices?\nI.e.: is the current price given more weight than historical prices?`}</li>\n    </ul>\n    <p>{`Note your answers for the following discussion.`}</p>\n    <h1 {...{\n      \"id\": \"oracle-strategies\"\n    }}>{`Oracle Strategies`}</h1>\n    <h2 {...{\n      \"id\": \"fixed-windows\"\n    }}>{`Fixed windows`}</h2>\n    <p>{`In the case where data freshness is not important and recent prices\nare weighted equally with historical prices, it is enough to\nstore the cumulative price once per period (e.g. once per 24 hours.)`}</p>\n    <p>{`Computing the average price over these data points gives you 'fixed windows',\nwhich can be updated after the lapse of each period. We wrote\nan example oracle of this kind\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/examples/ExampleOracleSimple.sol\"\n      }}>{`here`}</a>{`.`}</p>\n    <Github href=\"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/examples/ExampleOracleSimple.sol\" mdxType=\"Github\">ExampleOracleSimple.sol</Github>\n    <p>{`This example does not limit the maximum size of the fixed window, i.e.\nit only requires that the window size is greater than 1 period (e.g. 24 hours).`}</p>\n    <h2 {...{\n      \"id\": \"moving-averages\"\n    }}>{`Moving averages`}</h2>\n    <p>{`In the case where data freshness is important, you can use a sliding\nwindow in which the cumulative price variable is measured more often\nthan once per period.`}</p>\n    <p>{`There are at least\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.investopedia.com/terms/m/movingaverage.asp#types-of-moving-averages\"\n      }}>{`two kinds of moving averages`}</a>{`\nthat you can compute using the Uniswap cumulative price variable.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.investopedia.com/terms/s/sma.asp\"\n      }}>{`Simple moving averages`}</a>{`\ngive equal weight to each price measurement. We have built\nan example of a sliding window oracle\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/examples/ExampleSlidingWindowOracle.sol\"\n      }}>{`here`}</a>{`.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.investopedia.com/terms/e/ema.asp\"\n      }}>{`Exponential moving averages`}</a>{`\ngive more weight to the most recent price measurements. We do not yet have an example written for this type of oracle.`}</p>\n    <p>{`You may wish to use exponential moving averages where recent prices\nare more important than historical prices, e.g. in case of liquidations. However, note that\nputting more weight on recent prices makes the oracle cheaper to manipulate\nthan weighting all price measurements equally.`}</p>\n    <h2 {...{\n      \"id\": \"computing-average-prices\"\n    }}>{`Computing average prices`}</h2>\n    <p>{`To compute the average price given two cumulative price observations, take the difference between\nthe cumulative price at the beginning and end of the period, and\ndivide by the elapsed time between them in seconds. This will produce a\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Fixed-point_arithmetic#Notation\"\n      }}>{`fixed point unsigned Q112x112`}</a>{`\nnumber that represents the price of one asset relative to the other. This number is represented as a `}<inlineCode parentName=\"p\">{`uint224`}</inlineCode>{` where\nthe upper 112 bits represent the integer amount, and the lower 112 bits represent the fractional amount.`}</p>\n    <p>{`Pairs contain both `}<inlineCode parentName=\"p\">{`price0CumulativeLast`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`price1CumulativeLast`}</inlineCode>{`, which are ratios of reserves\nof `}<inlineCode parentName=\"p\">{`token1`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`token0`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`token0`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`token1`}</inlineCode>{` respectively. I.e. the price of `}<inlineCode parentName=\"p\">{`token0`}</inlineCode>{` is expressed in terms of\n`}<inlineCode parentName=\"p\">{`token1`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`token0`}</inlineCode>{`, while the price of `}<inlineCode parentName=\"p\">{`token1`}</inlineCode>{` is expressed in terms of `}<inlineCode parentName=\"p\">{`token0`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`token1`}</inlineCode>{`.`}</p>\n    <h1 {...{\n      \"id\": \"getting-the-latest-cumulative-price\"\n    }}>{`Getting the latest cumulative price`}</h1>\n    <p>{`If you wish to compute the average price between a historical price cumulative observation and the current cumulative\nprice, you should use the cumulative price values from the current block. If the cumulative price has not been updated\nin the current block, e.g. because there has not been any liquidity event (`}<inlineCode parentName=\"p\">{`mint`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`burn`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`swap`}</inlineCode>{`) on the pair in the current\nblock, you can compute the cumulative price counterfactually.`}</p>\n    <p>{`We provide a library for use in oracle contracts that has the method\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/libraries/UniswapV2OracleLibrary.sol#L16\"\n      }}><inlineCode parentName=\"a\">{`UniswapV2OracleLibrary#currentCumulativePrices`}</inlineCode></a>{`\nfor getting the cumulative price as of the current block.\nThe current cumulative price returned by this method is computed `}<em parentName=\"p\">{`counterfactually`}</em>{`, meaning it requires no call to\nthe relative gas-expensive `}<inlineCode parentName=\"p\">{`#sync`}</inlineCode>{` method on the pair.\nIt is correct regardless of whether a swap has already executed in the current block.`}</p>\n    <h1 {...{\n      \"id\": \"notes-on-overflow\"\n    }}>{`Notes on overflow`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`UniswapV2Pair`}</inlineCode>{` cumulative price variables are designed to eventually overflow,\ni.e. `}<inlineCode parentName=\"p\">{`price0CumulativeLast`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`price1CumulativeLast`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`blockTimestampLast`}</inlineCode>{` will overflow through 0.`}</p>\n    <p>{`This should not pose an issue to your oracle design, as the price average computation is concerned with differences\n(i.e. subtraction) between two separate observations of a cumulative price variable.\nSubtracting between two cumulative price values will result in a number that fits within the range of `}<inlineCode parentName=\"p\">{`uint256`}</inlineCode>{` as long\nas the observations are made for periods of max `}<inlineCode parentName=\"p\">{`2^32`}</inlineCode>{` seconds, or ~136 years.`}</p>\n    <p><inlineCode parentName=\"p\">{`blockTimestampLast`}</inlineCode>{` is stored only in a `}<inlineCode parentName=\"p\">{`uint32`}</inlineCode>{`. For the same reason as described above, the pair can save a\nstorage slot, and many SSTORES over the life of the pair, by storing only `}<inlineCode parentName=\"p\">{`block.timestamp % uint32(-1)`}</inlineCode>{`.\nThis is feasible because the pair is only concerned with the time that elapses between each liquidity event when updating\nthe cumulative prices, which is always expected to be less than `}<inlineCode parentName=\"p\">{`2^32`}</inlineCode>{` seconds.`}</p>\n    <p>{`When computing time elapsed within your own oracle, you can simply store the `}<inlineCode parentName=\"p\">{`block.timestamp`}</inlineCode>{` of your observations\nas `}<inlineCode parentName=\"p\">{`uint256`}</inlineCode>{`, and avoid dealing with overflow math for computing the time elapsed between observations. This is how the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/examples/ExampleSlidingWindowOracle.sol\"\n      }}>{`ExampleSlidingWindowOracle`}</a>{`\nhandles observation timestamps.`}</p>\n    <Github href=\"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/examples/ExampleSlidingWindowOracle.sol\" mdxType=\"Github\">ExampleSlidingWindowOracle</Github>\n    <h2 {...{\n      \"id\": \"integrating-the-oracle\"\n    }}>{`Integrating the oracle`}</h2>\n    <p>{`To integrate an oracle into your contracts, you must ensure the oracle's observations of the cumulative price variable\nare kept up to date.\nAs long as your oracle is up to date, you can depend on it to produce average prices.\nThe process of keeping your oracle up to date is called 'maintenance'.`}</p>\n    <h2 {...{\n      \"id\": \"oracle-maintenance\"\n    }}>{`Oracle maintenance`}</h2>\n    <p>{`In order to measure average prices over a period, the oracle must have a way\nof referencing the cumulative price at the start and end of a period.\nThe recommended way of doing this is by storing these prices in the oracle contract,\nand calling the oracle frequently enough to store the latest cumulative price.`}</p>\n    <p>{`Reliable oracle maintenance is a difficult task,\nand can become a point of failure in times of congestion.\nInstead, consider building this functionality directly into the\ncritical calls of your own smart contracts, or incentivize oracle\nmaintenance calls by other parties.`}</p>\n    <h2 {...{\n      \"id\": \"no-maintenance-option\"\n    }}>{`No-maintenance option`}</h2>\n    <p>{`It is possible to avoid regularly storing this cumulative price at the\nstart of the period by utilizing storage proofs. However, this approach has limitations,\nespecially in regard to gas cost and maximum length of the time period over which the average price can be measured.\nIf you wish to try this approach, you can follow\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/Keydonix/uniswap-oracle/\"\n      }}>{`this repository by Keydonix`}</a>{`.`}</p>\n    <Github href=\"https://github.com/Keydonix/uniswap-oracle\" mdxType=\"Github\">Keydonix: on-chain trustless and censorship resistant oracle</Github>\n    <p>{`Keydonix has developed a general purpose price feed oracle built on Uniswap v2 that supports arbitrary time windows (up to 256 blocks) and doesn't require any active maintenance.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}