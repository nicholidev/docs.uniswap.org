{"remainingRequest":"/Users/Connor/Uniswap/uniswap-v3-docs/uniswap/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/Connor/Uniswap/uniswap-v3-docs/uniswap/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/Connor/Uniswap/uniswap-v3-docs/uniswap/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/Connor/Uniswap/uniswap-v3-docs/uniswap/docs/v2/08-SDK/05-trade.md","dependencies":[{"path":"/Users/Connor/Uniswap/uniswap-v3-docs/uniswap/docs/v2/08-SDK/05-trade.md","mtime":1613488265352},{"path":"/Users/Connor/Uniswap/uniswap-v3-docs/uniswap/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-v-2-08-sdk-05-trade-md-cc9.json","mtime":1613488267834},{"path":"/Users/Connor/Uniswap/uniswap-v3-docs/uniswap/node_modules/cache-loader/dist/cjs.js","mtime":1613486809327},{"path":"/Users/Connor/Uniswap/uniswap-v3-docs/uniswap/node_modules/babel-loader/lib/index.js","mtime":1613486809014},{"path":"/Users/Connor/Uniswap/uniswap-v3-docs/uniswap/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1613486826947},{"path":"/Users/Connor/Uniswap/uniswap-v3-docs/uniswap/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1613486826420}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/Connor/Uniswap/uniswap-v3-docs/uniswap/docs/v2/08-SDK/05-trade.md"],"names":["React","mdx","frontMatter","title","tags","metadata","toc","value","id","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","Link","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\ttitle: 'Trade',\n\ttags: 'sdk, documentation'\n};\nexport const metadata = {\n  \"unversionedId\": \"v2/08-SDK/05-trade\",\n  \"id\": \"v2/08-SDK/05-trade\",\n  \"isDocsHomePage\": false,\n  \"title\": \"Trade\",\n  \"description\": \"`typescript\",\n  \"source\": \"@site/docs/v2/08-SDK/05-trade.md\",\n  \"slug\": \"/v2/08-SDK/05-trade\",\n  \"permalink\": \"/docs/v2/08-SDK/05-trade\",\n  \"editUrl\": \"https://github.com/facebook/docusaurus/edit/master/website/docs/v2/08-SDK/05-trade.md\",\n  \"version\": \"current\"\n};\n  /* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const toc = [{\n  value: 'route',\n  id: 'route',\n  children: []\n}, {\n  value: 'tradeType',\n  id: 'tradetype',\n  children: []\n}, {\n  value: 'inputAmount',\n  id: 'inputamount',\n  children: []\n}, {\n  value: 'outputAmount',\n  id: 'outputamount',\n  children: []\n}, {\n  value: 'executionPrice',\n  id: 'executionprice',\n  children: []\n}, {\n  value: 'nextMidPrice',\n  id: 'nextmidprice',\n  children: []\n}, {\n  value: 'slippage',\n  id: 'slippage',\n  children: []\n}, {\n  value: 'minimumAmountOut (since 2.0.4)',\n  id: 'minimumamountout-since-204',\n  children: []\n}, {\n  value: 'maximumAmountIn (since 2.0.4)',\n  id: 'maximumamountin-since-204',\n  children: []\n}, {\n  value: 'bestTradeExactIn',\n  id: 'besttradeexactin',\n  children: []\n}, {\n  value: 'bestTradeExactOut',\n  id: 'besttradeexactout',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Link = makeShortcode(\"Link\");\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`constructor(route: Route, amount: TokenAmount, tradeType: TradeType)\n`}</code></pre>\n    <p>{`The Trade entity represents a fully specified trade along a route. This entity supplies all the information necessary to craft a router transaction.`}</p>\n    <h1 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import { ChainId, Token, TokenAmount, Pair, TradeType, Route } from '@uniswap/sdk'\n\nconst HOT = new Token(ChainId.MAINNET, '0xc0FFee0000000000000000000000000000000000', 18, 'HOT', 'Caffeine')\nconst NOT = new Token(ChainId.MAINNET, '0xDeCAf00000000000000000000000000000000000', 18, 'NOT', 'Caffeine')\nconst HOT_NOT = new Pair(new TokenAmount(HOT, '2000000000000000000'), new TokenAmount(NOT, '1000000000000000000'))\nconst NOT_TO_HOT = new Route([HOT_NOT], NOT)\n\nconst trade = new Trade(NOT_TO_HOT, new TokenAmount(NOT, '1000000000000000'), TradeType.EXACT_INPUT)\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h1>\n    <h2 {...{\n      \"id\": \"route\"\n    }}>{`route`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`route: Route\n`}</code></pre>\n    <p>{`The `}<Link to='/docs/v2/SDK/route#path' mdxType=\"Link\">{`path`}</Link>{` property of the route should be passed as the path parameter to router functions.`}</p>\n    <h2 {...{\n      \"id\": \"tradetype\"\n    }}>{`tradeType`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`tradeType: TradeType\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`TradeType.EXACT_INPUT`}</inlineCode>{` corresponds to `}<inlineCode parentName=\"p\">{`swapExact*For*`}</inlineCode>{` router functions. `}<inlineCode parentName=\"p\">{`TradeType.EXACT_OUTPUT`}</inlineCode>{` corresponds to `}<inlineCode parentName=\"p\">{`swap*ForExact*`}</inlineCode>{` router functions.`}</p>\n    <h2 {...{\n      \"id\": \"inputamount\"\n    }}>{`inputAmount`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`inputAmount: TokenAmount\n`}</code></pre>\n    <p>{`For exact input trades, this value should be passed as amountIn to router functions. For exact output trades, this value should be multiplied by a factor >1, representing slippage tolerance, and passed as amountInMax to router functions.`}</p>\n    <h2 {...{\n      \"id\": \"outputamount\"\n    }}>{`outputAmount`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`outputAmount: TokenAmount\n`}</code></pre>\n    <p>{`For exact output trades, this value should be passed as amountOut to router functions. For exact input trades, this value should be multiplied by a factor <1, representing slippage tolerance, and passed as amountOutMin to router functions.`}</p>\n    <h2 {...{\n      \"id\": \"executionprice\"\n    }}>{`executionPrice`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`executionPrice: Price\n`}</code></pre>\n    <p>{`The average price that the trade would execute at.`}</p>\n    <h2 {...{\n      \"id\": \"nextmidprice\"\n    }}>{`nextMidPrice`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`nextMidPrice: Price\n`}</code></pre>\n    <p>{`What the new mid price would be if the trade were to execute.`}</p>\n    <h2 {...{\n      \"id\": \"slippage\"\n    }}>{`slippage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`slippage: Percent\n`}</code></pre>\n    <p>{`The slippage incurred by the trade.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Strictly > .30%.`}</li>\n    </ul>\n    <h1 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h1>\n    <p>{`In the context of the following two methods, slippage refers to the percent difference between the actual price and the trade `}<inlineCode parentName=\"p\">{`executionPrice`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"minimumamountout-since-204\"\n    }}>{`minimumAmountOut (since 2.0.4)`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`minimumAmountOut(slippageTolerance: Percent): TokenAmount\n`}</code></pre>\n    <p>{`Returns the minimum amount of the output token that should be received from a trade, given the slippage tolerance.`}</p>\n    <p>{`Useful when constructing a transaction for a trade of type `}<inlineCode parentName=\"p\">{`EXACT_IN`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"maximumamountin-since-204\"\n    }}>{`maximumAmountIn (since 2.0.4)`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`maximumAmountIn(slippageTolerance: Percent): TokenAmount\n`}</code></pre>\n    <p>{`Returns the maximum amount of the input token that should be spent on the trade, given the slippage tolerance.`}</p>\n    <p>{`Useful when constructing a transaction for a trade of type `}<inlineCode parentName=\"p\">{`EXACT_OUT`}</inlineCode>{`.`}</p>\n    <h1 {...{\n      \"id\": \"static-methods\"\n    }}>{`Static methods`}</h1>\n    <p>{`These static methods provide ways to construct ideal trades from lists of pairs.\nNote these methods do not perform any aggregation across routes, as routes are linear.\nIt's possible that a better price can be had by combining multiple trades across\ndifferent routes.`}</p>\n    <h2 {...{\n      \"id\": \"besttradeexactin\"\n    }}>{`bestTradeExactIn`}</h2>\n    <p>{`Given a list of pairs, a fixed amount in, and token amount out,\nthis method returns the best `}<inlineCode parentName=\"p\">{`maxNumResults`}</inlineCode>{` trades that swap\nan input token amount to an output token, making at most `}<inlineCode parentName=\"p\">{`maxHops`}</inlineCode>{` hops.\nThe returned trades are sorted by output amount, in decreasing order, and\nall share the given input amount.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`Trade.bestTradeExactIn(\n    pairs: Pair[],\n    amountIn: TokenAmount,\n    tokenOut: Token,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {}): Trade[]\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"besttradeexactout\"\n    }}>{`bestTradeExactOut`}</h2>\n    <p>{`Similar to the above method, but targets a fixed output token amount.\nThe returned trades are sorted by input amount, in increasing order,\nand all share the given output amount.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`Trade.bestTradeExactOut(\n    pairs: Pair[],\n    tokenIn: Token,\n    amountOut: TokenAmount,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {}): Trade[]\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}