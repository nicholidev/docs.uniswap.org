{"remainingRequest":"/Users/Connor/Uniswap/uniswap-docs/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/Connor/Uniswap/uniswap-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/Connor/Uniswap/uniswap-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/Connor/Uniswap/uniswap-docs/docs_versioned_docs/version-v1/V1/02-SDK/07-constants.md","dependencies":[{"path":"/Users/Connor/Uniswap/uniswap-docs/docs_versioned_docs/version-v1/V1/02-SDK/07-constants.md","mtime":1613672804363},{"path":"/Users/Connor/Uniswap/uniswap-docs/.docusaurus/docusaurus-plugin-content-docs/docs/site-docs-versioned-docs-version-v-1-v-1-02-sdk-07-constants-md-e4f.json","mtime":1613673027796},{"path":"/Users/Connor/Uniswap/uniswap-docs/node_modules/cache-loader/dist/cjs.js","mtime":1613486809327},{"path":"/Users/Connor/Uniswap/uniswap-docs/node_modules/babel-loader/lib/index.js","mtime":1613486809014},{"path":"/Users/Connor/Uniswap/uniswap-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1613486826947},{"path":"/Users/Connor/Uniswap/uniswap-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1613486826420}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL0Nvbm5vci9Vbmlzd2FwL3VuaXN3YXAtZG9jcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgY29uc3QgZnJvbnRNYXR0ZXI9e2lkOicwNy1jb25zdGFudHMnLHRpdGxlOidDb25zdGFudHMnfTtleHBvcnQgY29uc3QgbWV0YWRhdGE9eyJ1bnZlcnNpb25lZElkIjoiVjEvMDItU0RLLzA3LWNvbnN0YW50cyIsImlkIjoidmVyc2lvbi12MS9WMS8wMi1TREsvMDctY29uc3RhbnRzIiwiaXNEb2NzSG9tZVBhZ2UiOmZhbHNlLCJ0aXRsZSI6IkNvbnN0YW50cyIsImRlc2NyaXB0aW9uIjoiQmVsb3cgaXMgYW4gZXhoYXVzdGl2ZSBsaXN0IG9mIGFsbCBleHRlcm5hbCBjb25zdGFudHMgdXNlZCBpbiB0aGUgU0RLLiIsInNvdXJjZSI6IkBzaXRlL2RvY3NfdmVyc2lvbmVkX2RvY3MvdmVyc2lvbi12MS9WMS8wMi1TREsvMDctY29uc3RhbnRzLm1kIiwic2x1ZyI6Ii9WMS8wMi1TREsvMDctY29uc3RhbnRzIiwicGVybWFsaW5rIjoiL2RvY3MvVjEvMDItU0RLLzA3LWNvbnN0YW50cyIsImVkaXRVcmwiOiJodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svZG9jdXNhdXJ1cy9lZGl0L21hc3Rlci93ZWJzaXRlL2RvY3NfdmVyc2lvbmVkX2RvY3MvdmVyc2lvbi12MS9WMS8wMi1TREsvMDctY29uc3RhbnRzLm1kIiwidmVyc2lvbiI6InYxIiwic2lkZWJhciI6InZlcnNpb24tdjEvZG9jcyIsInByZXZpb3VzIjp7InRpdGxlIjoiVHJhbnNhY3QiLCJwZXJtYWxpbmsiOiIvZG9jcy9WMS8wMi1TREsvMDYtdHJhbnNhY3QifSwibmV4dCI6eyJ0aXRsZSI6IlR5cGVzIiwicGVybWFsaW5rIjoiL2RvY3MvVjEvMDItU0RLLzA4LXR5cGVzIn19Oy8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi8gLyogQGpzeCBtZHggKi9leHBvcnQgY29uc3QgdG9jPVtdO2NvbnN0IGxheW91dFByb3BzPXt0b2N9O2NvbnN0IE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7Y29tcG9uZW50cywuLi5wcm9wc30pe3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgicCIsbnVsbCxgQmVsb3cgaXMgYW4gZXhoYXVzdGl2ZSBsaXN0IG9mIGFsbCBleHRlcm5hbCBjb25zdGFudHMgdXNlZCBpbiB0aGUgU0RLLmApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIse3BhcmVudE5hbWU6InByZSIsImNsYXNzTmFtZSI6Imxhbmd1YWdlLXR5cGVzY3JpcHQifSxgaW1wb3J0IEJpZ051bWJlciBmcm9tICdiaWdudW1iZXIuanMnCgppbXBvcnQgRVJDMjAgZnJvbSAnLi9hYmlzL0VSQzIwLmpzb24nCmltcG9ydCBGQUNUT1JZIGZyb20gJy4vYWJpcy9GQUNUT1JZLmpzb24nCmltcG9ydCBFWENIQU5HRSBmcm9tICcuL2FiaXMvRVhDSEFOR0UuanNvbicKCmV4cG9ydCBjb25zdCBFVEggPSAnRVRIJwoKZXhwb3J0IGVudW0gU1VQUE9SVEVEX0NIQUlOX0lEIHsKICBNYWlubmV0ID0gMSwKICBSb3BzdGVuID0gMywKICBSaW5rZWJ5ID0gNCwKICBLb3ZhbiA9IDQyCn0KCmV4cG9ydCBjb25zdCBGQUNUT1JZX0FERFJFU1M6IHsgW2tleTogbnVtYmVyXTogc3RyaW5nIH0gPSB7fQoKZXhwb3J0IGNvbnN0IEZBQ1RPUllfQUJJOiBzdHJpbmcgPSBKU09OLnN0cmluZ2lmeShGQUNUT1JZKQpleHBvcnQgY29uc3QgRVhDSEFOR0VfQUJJOiBzdHJpbmcgPSBKU09OLnN0cmluZ2lmeShFWENIQU5HRSkKCmV4cG9ydCBlbnVtIFRSQURFX1RZUEUgewogIEVUSF9UT19UT0tFTiA9ICdFVEhfVE9fVE9LRU4nLAogIFRPS0VOX1RPX0VUSCA9ICdUT0tFTl9UT19FVEgnLAogIFRPS0VOX1RPX1RPS0VOID0gJ1RPS0VOX1RPX1RPS0VOJwp9CgpleHBvcnQgZW51bSBUUkFERV9FWEFDVCB7CiAgSU5QVVQgPSAnSU5QVVQnLAogIE9VVFBVVCA9ICdPVVRQVVQnCn0KCmV4cG9ydCBlbnVtIFRSQURFX01FVEhPRFMgewogIGV0aFRvVG9rZW5Td2FwSW5wdXQgPSAnZXRoVG9Ub2tlblN3YXBJbnB1dCcsCiAgZXRoVG9Ub2tlblRyYW5zZmVySW5wdXQgPSAnZXRoVG9Ub2tlblRyYW5zZmVySW5wdXQnLAogIGV0aFRvVG9rZW5Td2FwT3V0cHV0ID0gJ2V0aFRvVG9rZW5Td2FwT3V0cHV0JywKICBldGhUb1Rva2VuVHJhbnNmZXJPdXRwdXQgPSAnZXRoVG9Ub2tlblRyYW5zZmVyT3V0cHV0JywKICB0b2tlblRvRXRoU3dhcElucHV0ID0gJ3Rva2VuVG9FdGhTd2FwSW5wdXQnLAogIHRva2VuVG9FdGhUcmFuc2ZlcklucHV0ID0gJ3Rva2VuVG9FdGhUcmFuc2ZlcklucHV0JywKICB0b2tlblRvRXRoU3dhcE91dHB1dCA9ICd0b2tlblRvRXRoU3dhcE91dHB1dCcsCiAgdG9rZW5Ub0V0aFRyYW5zZmVyT3V0cHV0ID0gJ3Rva2VuVG9FdGhUcmFuc2Zlck91dHB1dCcsCiAgdG9rZW5Ub1Rva2VuU3dhcElucHV0ID0gJ3Rva2VuVG9Ub2tlblN3YXBJbnB1dCcsCiAgdG9rZW5Ub1Rva2VuVHJhbnNmZXJJbnB1dCA9ICd0b2tlblRvVG9rZW5UcmFuc2ZlcklucHV0JywKICB0b2tlblRvVG9rZW5Td2FwT3V0cHV0ID0gJ3Rva2VuVG9Ub2tlblN3YXBPdXRwdXQnLAogIHRva2VuVG9Ub2tlblRyYW5zZmVyT3V0cHV0ID0gJ3Rva2VuVG9Ub2tlblRyYW5zZmVyT3V0cHV0Jwp9CgpleHBvcnQgY29uc3QgVFJBREVfTUVUSE9EX0lEUzogeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfSA9IHt9CgpleHBvcnQgZW51bSBGSVhFRF9VTkRFUkZMT1dfQkVIQVZJT1IgewogIFpFUk8gPSAnWkVSTycsCiAgTEVTU19USEFOID0gJ0xFU1NfVEhBTicsCiAgT05FX0RJR0lUID0gJ09ORV9ESUdJVCcKfQpgKSkpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/Connor/Uniswap/uniswap-docs/docs_versioned_docs/version-v1/V1/02-SDK/07-constants.md"],"names":["React","mdx","frontMatter","id","title","metadata","toc","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"yGACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,CAC5BC,EAAE,CAAE,cADwB,CAE5BC,KAAK,CAAE,WAFqB,CAApB,CAIT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,gBAAiB,wBADK,CAEtB,KAAM,mCAFgB,CAGtB,iBAAkB,KAHI,CAItB,QAAS,WAJa,CAKtB,cAAe,wEALO,CAMtB,SAAU,gEANY,CAOtB,OAAQ,yBAPc,CAQtB,YAAa,8BARS,CAStB,UAAW,qHATW,CAUtB,UAAW,IAVW,CAWtB,UAAW,iBAXW,CAYtB,WAAY,CACV,QAAS,UADC,CAEV,YAAa,6BAFH,CAZU,CAgBtB,OAAQ,CACN,QAAS,OADH,CAEN,YAAa,0BAFP,CAhBc,CAAjB,CAqBL,yB,CACF,cAEA,MAAO,MAAMC,CAAAA,GAAG,CAAG,EAAZ,CAEP,KAAMC,CAAAA,WAAW,CAAG,CAClBD,GADkB,CAApB,CAGA,KAAME,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGC,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeJ,WAAf,CAAgCI,KAAhC,EAAuC,UAAU,CAAED,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,aAAK,wEAAL,CAFK,CAGL,eAAK,YAAM,UAAU,CAAC,KAAjB,CACD,YAAa,qBADZ,EAEE;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvDS,CAAL,CAHK,CAAP,CA4DD,CAED,CACAD,UAAU,CAACG,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: '07-constants',\n\ttitle: 'Constants'\n};\nexport const metadata = {\n  \"unversionedId\": \"V1/02-SDK/07-constants\",\n  \"id\": \"version-v1/V1/02-SDK/07-constants\",\n  \"isDocsHomePage\": false,\n  \"title\": \"Constants\",\n  \"description\": \"Below is an exhaustive list of all external constants used in the SDK.\",\n  \"source\": \"@site/docs_versioned_docs/version-v1/V1/02-SDK/07-constants.md\",\n  \"slug\": \"/V1/02-SDK/07-constants\",\n  \"permalink\": \"/docs/V1/02-SDK/07-constants\",\n  \"editUrl\": \"https://github.com/facebook/docusaurus/edit/master/website/docs_versioned_docs/version-v1/V1/02-SDK/07-constants.md\",\n  \"version\": \"v1\",\n  \"sidebar\": \"version-v1/docs\",\n  \"previous\": {\n    \"title\": \"Transact\",\n    \"permalink\": \"/docs/V1/02-SDK/06-transact\"\n  },\n  \"next\": {\n    \"title\": \"Types\",\n    \"permalink\": \"/docs/V1/02-SDK/08-types\"\n  }\n};\n  /* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const toc = [];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`Below is an exhaustive list of all external constants used in the SDK.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import BigNumber from 'bignumber.js'\n\nimport ERC20 from './abis/ERC20.json'\nimport FACTORY from './abis/FACTORY.json'\nimport EXCHANGE from './abis/EXCHANGE.json'\n\nexport const ETH = 'ETH'\n\nexport enum SUPPORTED_CHAIN_ID {\n  Mainnet = 1,\n  Ropsten = 3,\n  Rinkeby = 4,\n  Kovan = 42\n}\n\nexport const FACTORY_ADDRESS: { [key: number]: string } = {}\n\nexport const FACTORY_ABI: string = JSON.stringify(FACTORY)\nexport const EXCHANGE_ABI: string = JSON.stringify(EXCHANGE)\n\nexport enum TRADE_TYPE {\n  ETH_TO_TOKEN = 'ETH_TO_TOKEN',\n  TOKEN_TO_ETH = 'TOKEN_TO_ETH',\n  TOKEN_TO_TOKEN = 'TOKEN_TO_TOKEN'\n}\n\nexport enum TRADE_EXACT {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT'\n}\n\nexport enum TRADE_METHODS {\n  ethToTokenSwapInput = 'ethToTokenSwapInput',\n  ethToTokenTransferInput = 'ethToTokenTransferInput',\n  ethToTokenSwapOutput = 'ethToTokenSwapOutput',\n  ethToTokenTransferOutput = 'ethToTokenTransferOutput',\n  tokenToEthSwapInput = 'tokenToEthSwapInput',\n  tokenToEthTransferInput = 'tokenToEthTransferInput',\n  tokenToEthSwapOutput = 'tokenToEthSwapOutput',\n  tokenToEthTransferOutput = 'tokenToEthTransferOutput',\n  tokenToTokenSwapInput = 'tokenToTokenSwapInput',\n  tokenToTokenTransferInput = 'tokenToTokenTransferInput',\n  tokenToTokenSwapOutput = 'tokenToTokenSwapOutput',\n  tokenToTokenTransferOutput = 'tokenToTokenTransferOutput'\n}\n\nexport const TRADE_METHOD_IDS: { [key: string]: string } = {}\n\nexport enum FIXED_UNDERFLOW_BEHAVIOR {\n  ZERO = 'ZERO',\n  LESS_THAN = 'LESS_THAN',\n  ONE_DIGIT = 'ONE_DIGIT'\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}