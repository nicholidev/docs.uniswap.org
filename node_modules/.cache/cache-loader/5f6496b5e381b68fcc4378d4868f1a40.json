{"remainingRequest":"/Users/Connor/Uniswap/uniswap-docs/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/Connor/Uniswap/uniswap-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/Connor/Uniswap/uniswap-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/Connor/Uniswap/uniswap-docs/docs_versioned_docs/version-v1/02-SDK/08-types.md","dependencies":[{"path":"/Users/Connor/Uniswap/uniswap-docs/docs_versioned_docs/version-v1/02-SDK/08-types.md","mtime":1613673407428},{"path":"/Users/Connor/Uniswap/uniswap-docs/.docusaurus/docusaurus-plugin-content-docs/docs/site-docs-versioned-docs-version-v-1-02-sdk-08-types-md-6d6.json","mtime":1613685137786},{"path":"/Users/Connor/Uniswap/uniswap-docs/node_modules/cache-loader/dist/cjs.js","mtime":1613486809327},{"path":"/Users/Connor/Uniswap/uniswap-docs/node_modules/babel-loader/lib/index.js","mtime":1613486809014},{"path":"/Users/Connor/Uniswap/uniswap-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1613486826947},{"path":"/Users/Connor/Uniswap/uniswap-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1613486826420}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL0Nvbm5vci9Vbmlzd2FwL3VuaXN3YXAtZG9jcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgY29uc3QgZnJvbnRNYXR0ZXI9e3RpdGxlOidUeXBlcyd9O2V4cG9ydCBjb25zdCBtZXRhZGF0YT17InVudmVyc2lvbmVkSWQiOiIwMi1TREsvMDgtdHlwZXMiLCJpZCI6InZlcnNpb24tdjEvMDItU0RLLzA4LXR5cGVzIiwiaXNEb2NzSG9tZVBhZ2UiOmZhbHNlLCJ0aXRsZSI6IlR5cGVzIiwiZGVzY3JpcHRpb24iOiJCZWxvdyBpcyBhbiBleGhhdXN0aXZlIGxpc3Qgb2YgYWxsIHRoZSBleHRlcm5hbCB0eXBlcyB1c2VkIGluIHRoZSBTREsuIiwic291cmNlIjoiQHNpdGUvZG9jc192ZXJzaW9uZWRfZG9jcy92ZXJzaW9uLXYxLzAyLVNESy8wOC10eXBlcy5tZCIsInNsdWciOiIvMDItU0RLLzA4LXR5cGVzIiwicGVybWFsaW5rIjoiL2RvY3MvMDItU0RLLzA4LXR5cGVzIiwiZWRpdFVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9kb2N1c2F1cnVzL2VkaXQvbWFzdGVyL3dlYnNpdGUvZG9jc192ZXJzaW9uZWRfZG9jcy92ZXJzaW9uLXYxLzAyLVNESy8wOC10eXBlcy5tZCIsInZlcnNpb24iOiJ2MSIsInNpZGViYXIiOiJ2ZXJzaW9uLXYxL2RvY3MiLCJwcmV2aW91cyI6eyJ0aXRsZSI6IkNvbnN0YW50cyIsInBlcm1hbGluayI6Ii9kb2NzLzAyLVNESy8wNy1jb25zdGFudHMifSwibmV4dCI6eyJ0aXRsZSI6IkZhY3RvcnkiLCJwZXJtYWxpbmsiOiIvZG9jcy8wMy1zbWFydC1jb250cmFjdHMvMDEtZmFjdG9yeSJ9fTsvKiBAanN4UnVudGltZSBjbGFzc2ljICovIC8qIEBqc3ggbWR4ICovZXhwb3J0IGNvbnN0IHRvYz1bXTtjb25zdCBsYXlvdXRQcm9wcz17dG9jfTtjb25zdCBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe2NvbXBvbmVudHMsLi4ucHJvcHN9KXtyZXR1cm4gbWR4KE1EWExheW91dCxfZXh0ZW5kcyh7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoInAiLG51bGwsYEJlbG93IGlzIGFuIGV4aGF1c3RpdmUgbGlzdCBvZiBhbGwgdGhlIGV4dGVybmFsIHR5cGVzIHVzZWQgaW4gdGhlIFNESy5gKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLHtwYXJlbnROYW1lOiJwcmUiLCJjbGFzc05hbWUiOiJsYW5ndWFnZS10eXBlc2NyaXB0In0sYGltcG9ydCBCaWdOdW1iZXIgZnJvbSAnYmlnbnVtYmVyLmpzJwppbXBvcnQgeyBldGhlcnMgfSBmcm9tICdldGhlcnMnCgppbXBvcnQgeyBTVVBQT1JURURfQ0hBSU5fSUQsIFRSQURFX1RZUEUsIFRSQURFX0VYQUNULCBGSVhFRF9VTkRFUkZMT1dfQkVIQVZJT1IgfSBmcm9tICcuL2NvbnN0YW50cycKCmV4cG9ydCB0eXBlIEJpZ051bWJlcmlzaCA9IEJpZ051bWJlciB8IGV0aGVycy51dGlscy5CaWdOdW1iZXIgfCBzdHJpbmcgfCBudW1iZXIKCi8vLy8gdHlwZXMgZm9yIG9uLWNoYWluLCBzdWJtaXR0ZWQsIGFuZCBub3JtYWxpemVkIGRhdGEKZXhwb3J0IHR5cGUgQ2hhaW5JZE9yUHJvdmlkZXIgPSBTVVBQT1JURURfQ0hBSU5fSUQgfCBldGhlcnMucHJvdmlkZXJzLkFzeW5jU2VuZGFibGUgfCBldGhlcnMucHJvdmlkZXJzLlByb3ZpZGVyCgovLyB0eXBlIGd1YXJkIGZvciBDaGFpbklkT3JQcm92aWRlcgpleHBvcnQgZnVuY3Rpb24gaXNDaGFpbklkKGNoYWluSWRPclByb3ZpZGVyOiBDaGFpbklkT3JQcm92aWRlcik6IGNoYWluSWRPclByb3ZpZGVyIGlzIFNVUFBPUlRFRF9DSEFJTl9JRCB7CiAgY29uc3QgY2hhaW5JZDogU1VQUE9SVEVEX0NIQUlOX0lEID0gY2hhaW5JZE9yUHJvdmlkZXIgYXMgU1VQUE9SVEVEX0NIQUlOX0lECiAgcmV0dXJuIHR5cGVvZiBjaGFpbklkID09PSAnbnVtYmVyJwp9CgovLyB0eXBlIGd1YXJkIGZvciBDaGFpbklkT3JQcm92aWRlcgpleHBvcnQgZnVuY3Rpb24gaXNMb3dMZXZlbFByb3ZpZGVyKAogIGNoYWluSWRPclByb3ZpZGVyOiBDaGFpbklkT3JQcm92aWRlcgopOiBjaGFpbklkT3JQcm92aWRlciBpcyBldGhlcnMucHJvdmlkZXJzLkFzeW5jU2VuZGFibGUgewogIGlmIChpc0NoYWluSWQoY2hhaW5JZE9yUHJvdmlkZXIpKSB7CiAgICByZXR1cm4gZmFsc2UKICB9IGVsc2UgewogICAgY29uc3QgcHJvdmlkZXI6IGV0aGVycy5wcm92aWRlcnMuQXN5bmNTZW5kYWJsZSA9IGNoYWluSWRPclByb3ZpZGVyIGFzIGV0aGVycy5wcm92aWRlcnMuQXN5bmNTZW5kYWJsZQogICAgcmV0dXJuICdzZW5kJyBpbiBwcm92aWRlciB8fCAnc2VuZEFzeW5jJyBpbiBwcm92aWRlcgogIH0KfQoKZXhwb3J0IGludGVyZmFjZSBUb2tlbiB7CiAgY2hhaW5JZD86IFNVUFBPUlRFRF9DSEFJTl9JRAogIGFkZHJlc3M/OiBzdHJpbmcKICBkZWNpbWFsczogbnVtYmVyCn0KCmV4cG9ydCBpbnRlcmZhY2UgVG9rZW5BbW91bnQgewogIHRva2VuOiBUb2tlbgogIGFtb3VudDogQmlnTnVtYmVyaXNoCn0KCmV4cG9ydCBpbnRlcmZhY2UgVG9rZW5BbW91bnROb3JtYWxpemVkIHsKICB0b2tlbjogVG9rZW4KICBhbW91bnQ6IEJpZ051bWJlcgp9CgpleHBvcnQgaW50ZXJmYWNlIFRva2VuUmVzZXJ2ZXMgewogIHRva2VuOiBUb2tlbgogIGV4Y2hhbmdlPzogVG9rZW4KICBldGhSZXNlcnZlOiBUb2tlbkFtb3VudAogIHRva2VuUmVzZXJ2ZTogVG9rZW5BbW91bnQKfQoKZXhwb3J0IGludGVyZmFjZSBUb2tlblJlc2VydmVzTm9ybWFsaXplZCB7CiAgdG9rZW46IFRva2VuCiAgZXhjaGFuZ2U/OiBUb2tlbgogIGV0aFJlc2VydmU6IFRva2VuQW1vdW50Tm9ybWFsaXplZAogIHRva2VuUmVzZXJ2ZTogVG9rZW5BbW91bnROb3JtYWxpemVkCn0KCmV4cG9ydCBpbnRlcmZhY2UgRXRoUmVzZXJ2ZXMgewogIHRva2VuOiBUb2tlbgp9CgovLyB0eXBlIGZvciBpbnB1dCBkYXRhCmV4cG9ydCB0eXBlIE9wdGlvbmFsUmVzZXJ2ZXMgPSBUb2tlblJlc2VydmVzIHwgRXRoUmVzZXJ2ZXMgfCB1bmRlZmluZWQKCi8vIHR5cGUgZ3VhcmQgZm9yIE9wdGlvbmFsUmVzZXJ2ZXMKZXhwb3J0IGZ1bmN0aW9uIGFyZVRva2VuUmVzZXJ2ZXMocmVzZXJ2ZXM6IE9wdGlvbmFsUmVzZXJ2ZXMpOiByZXNlcnZlcyBpcyBUb2tlblJlc2VydmVzIHsKICBjb25zdCB0b2tlblJlc2VydmVzOiBUb2tlblJlc2VydmVzID0gcmVzZXJ2ZXMgYXMgVG9rZW5SZXNlcnZlcwogIHJldHVybiAoCiAgICB0b2tlblJlc2VydmVzICE9PSB1bmRlZmluZWQgJiYgdG9rZW5SZXNlcnZlcy5ldGhSZXNlcnZlICE9PSB1bmRlZmluZWQgJiYgdG9rZW5SZXNlcnZlcy50b2tlblJlc2VydmUgIT09IHVuZGVmaW5lZAogICkKfQoKLy8gdHlwZSBndWFyZCBmb3IgT3B0aW9uYWxSZXNlcnZlcwpleHBvcnQgZnVuY3Rpb24gYXJlRVRIUmVzZXJ2ZXMocmVzZXJ2ZXM6IE9wdGlvbmFsUmVzZXJ2ZXMpOiByZXNlcnZlcyBpcyBFdGhSZXNlcnZlcyB7CiAgY29uc3QgdG9rZW5SZXNlcnZlczogVG9rZW5SZXNlcnZlcyA9IHJlc2VydmVzIGFzIFRva2VuUmVzZXJ2ZXMKICByZXR1cm4gKAogICAgdG9rZW5SZXNlcnZlcyAhPT0gdW5kZWZpbmVkICYmIHRva2VuUmVzZXJ2ZXMuZXRoUmVzZXJ2ZSA9PT0gdW5kZWZpbmVkICYmIHRva2VuUmVzZXJ2ZXMudG9rZW5SZXNlcnZlID09PSB1bmRlZmluZWQKICApCn0KCi8vIHR5cGUgZm9yIG91dHB1dCBkYXRhCmV4cG9ydCB0eXBlIE5vcm1hbGl6ZWRSZXNlcnZlcyA9IFRva2VuUmVzZXJ2ZXNOb3JtYWxpemVkIHwgRXRoUmVzZXJ2ZXMKCi8vIHR5cGUgZ3VhcmQgZm9yIE5vcm1hbGl6ZWRSZXNlcnZlcwpleHBvcnQgZnVuY3Rpb24gYXJlVG9rZW5SZXNlcnZlc05vcm1hbGl6ZWQocmVzZXJ2ZXM6IE5vcm1hbGl6ZWRSZXNlcnZlcyk6IHJlc2VydmVzIGlzIFRva2VuUmVzZXJ2ZXNOb3JtYWxpemVkIHsKICBjb25zdCB0b2tlblJlc2VydmVzTm9ybWFsaXplZDogVG9rZW5SZXNlcnZlc05vcm1hbGl6ZWQgPSByZXNlcnZlcyBhcyBUb2tlblJlc2VydmVzTm9ybWFsaXplZAogIHJldHVybiB0b2tlblJlc2VydmVzTm9ybWFsaXplZC5ldGhSZXNlcnZlICE9PSB1bmRlZmluZWQgJiYgdG9rZW5SZXNlcnZlc05vcm1hbGl6ZWQudG9rZW5SZXNlcnZlICE9PSB1bmRlZmluZWQKfQoKLy8vLyB0eXBlcyBmb3IgY29tcHV0ZWQgZGF0YQpleHBvcnQgaW50ZXJmYWNlIFJhdGUgewogIHJhdGU6IEJpZ051bWJlcgogIHJhdGVJbnZlcnRlZDogQmlnTnVtYmVyCn0KZXhwb3J0IGludGVyZmFjZSBNYXJrZXREZXRhaWxzIHsKICB0cmFkZVR5cGU6IFRSQURFX1RZUEUKICBpbnB1dFJlc2VydmVzOiBOb3JtYWxpemVkUmVzZXJ2ZXMKICBvdXRwdXRSZXNlcnZlczogTm9ybWFsaXplZFJlc2VydmVzCiAgbWFya2V0UmF0ZTogUmF0ZQp9CgpleHBvcnQgaW50ZXJmYWNlIFRyYWRlRGV0YWlscyB7CiAgbWFya2V0RGV0YWlsc1ByZTogTWFya2V0RGV0YWlscwogIG1hcmtldERldGFpbHNQb3N0OiBNYXJrZXREZXRhaWxzCiAgdHJhZGVUeXBlOiBUUkFERV9UWVBFCiAgdHJhZGVFeGFjdDogVFJBREVfRVhBQ1QKICBpbnB1dEFtb3VudDogVG9rZW5BbW91bnROb3JtYWxpemVkCiAgb3V0cHV0QW1vdW50OiBUb2tlbkFtb3VudE5vcm1hbGl6ZWQKICBleGVjdXRpb25SYXRlOiBSYXRlCiAgbWFya2V0UmF0ZVNsaXBwYWdlOiBCaWdOdW1iZXIKICBleGVjdXRpb25SYXRlU2xpcHBhZ2U6IEJpZ051bWJlcgp9CgpleHBvcnQgdHlwZSBNZXRob2RBcmd1bWVudCA9IEJpZ051bWJlciB8IG51bWJlciB8IHN0cmluZwoKZXhwb3J0IGludGVyZmFjZSBFeGVjdXRpb25EZXRhaWxzIHsKICBleGNoYW5nZUFkZHJlc3M6IHN0cmluZwogIG1ldGhvZE5hbWU6IHN0cmluZwogIG1ldGhvZElkOiBzdHJpbmcKICB2YWx1ZTogQmlnTnVtYmVyCiAgbWV0aG9kQXJndW1lbnRzOiBNZXRob2RBcmd1bWVudFtdCn0KCi8vLy8gdHlwZXMgZm9yIGZvcm1hdHRpbmcgZGF0YQpleHBvcnQgdHlwZSBGbGV4aWJsZUZvcm1hdCA9IEJpZ051bWJlci5Gb3JtYXQgfCBib29sZWFuCgovLyB0eXBlIGd1YXJkIGZvciBGbGV4aWJsZUZvcm1hdApleHBvcnQgZnVuY3Rpb24gaXNGb3JtYXQoZmxleGlibGVGb3JtYXQ6IEZsZXhpYmxlRm9ybWF0KTogZmxleGlibGVGb3JtYXQgaXMgQmlnTnVtYmVyLkZvcm1hdCB7CiAgY29uc3QgZm9ybWF0OiBCaWdOdW1iZXIuRm9ybWF0ID0gZmxleGlibGVGb3JtYXQgYXMgQmlnTnVtYmVyLkZvcm1hdAogIHJldHVybiB0eXBlb2YgZm9ybWF0ICE9PSAnYm9vbGVhbicKfQoKZXhwb3J0IGludGVyZmFjZSBGb3JtYXRTaWduaWZpY2FudE9wdGlvbnMgewogIHNpZ25pZmljYW50RGlnaXRzOiBudW1iZXIKICByb3VuZGluZ01vZGU6IEJpZ051bWJlci5Sb3VuZGluZ01vZGUKICBmb3JjZUludGVnZXJTaWduaWZpY2FuY2U6IGJvb2xlYW4KICBmb3JtYXQ6IEZsZXhpYmxlRm9ybWF0Cn0KCmV4cG9ydCBpbnRlcmZhY2UgRm9ybWF0Rml4ZWRPcHRpb25zIHsKICBkZWNpbWFsUGxhY2VzOiBudW1iZXIKICByb3VuZGluZ01vZGU6IEJpZ051bWJlci5Sb3VuZGluZ01vZGUKICBkcm9wVHJhaWxpbmdaZXJvczogYm9vbGVhbgogIHVuZGVyZmxvd0JlaGF2aW9yOiBGSVhFRF9VTkRFUkZMT1dfQkVIQVZJT1IKICBmb3JtYXQ6IEZsZXhpYmxlRm9ybWF0Cn0KYCkpKTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/Connor/Uniswap/uniswap-docs/docs_versioned_docs/version-v1/02-SDK/08-types.md"],"names":["React","mdx","frontMatter","title","metadata","toc","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"yGACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,CAC5BC,KAAK,CAAE,OADqB,CAApB,CAGT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,gBAAiB,iBADK,CAEtB,KAAM,4BAFgB,CAGtB,iBAAkB,KAHI,CAItB,QAAS,OAJa,CAKtB,cAAe,wEALO,CAMtB,SAAU,yDANY,CAOtB,OAAQ,kBAPc,CAQtB,YAAa,uBARS,CAStB,UAAW,8GATW,CAUtB,UAAW,IAVW,CAWtB,UAAW,iBAXW,CAYtB,WAAY,CACV,QAAS,WADC,CAEV,YAAa,2BAFH,CAZU,CAgBtB,OAAQ,CACN,QAAS,SADH,CAEN,YAAa,qCAFP,CAhBc,CAAjB,CAqBL,yB,CACF,cAEA,MAAO,MAAMC,CAAAA,GAAG,CAAG,EAAZ,CAEP,KAAMC,CAAAA,WAAW,CAAG,CAClBD,GADkB,CAApB,CAGA,KAAME,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGC,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeJ,WAAf,CAAgCI,KAAhC,EAAuC,UAAU,CAAED,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,aAAK,wEAAL,CAFK,CAGL,eAAK,YAAM,UAAU,CAAC,KAAjB,CACD,YAAa,qrJS,CAAL,CAHK,CAAP,CA0JD,CAED,CACAD,UAAU,CAACG,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\ttitle: 'Types'\n};\nexport const metadata = {\n  \"unversionedId\": \"02-SDK/08-types\",\n  \"id\": \"version-v1/02-SDK/08-types\",\n  \"isDocsHomePage\": false,\n  \"title\": \"Types\",\n  \"description\": \"Below is an exhaustive list of all the external types used in the SDK.\",\n  \"source\": \"@site/docs_versioned_docs/version-v1/02-SDK/08-types.md\",\n  \"slug\": \"/02-SDK/08-types\",\n  \"permalink\": \"/docs/02-SDK/08-types\",\n  \"editUrl\": \"https://github.com/facebook/docusaurus/edit/master/website/docs_versioned_docs/version-v1/02-SDK/08-types.md\",\n  \"version\": \"v1\",\n  \"sidebar\": \"version-v1/docs\",\n  \"previous\": {\n    \"title\": \"Constants\",\n    \"permalink\": \"/docs/02-SDK/07-constants\"\n  },\n  \"next\": {\n    \"title\": \"Factory\",\n    \"permalink\": \"/docs/03-smart-contracts/01-factory\"\n  }\n};\n  /* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const toc = [];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`Below is an exhaustive list of all the external types used in the SDK.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nimport { SUPPORTED_CHAIN_ID, TRADE_TYPE, TRADE_EXACT, FIXED_UNDERFLOW_BEHAVIOR } from './constants'\n\nexport type BigNumberish = BigNumber | ethers.utils.BigNumber | string | number\n\n//// types for on-chain, submitted, and normalized data\nexport type ChainIdOrProvider = SUPPORTED_CHAIN_ID | ethers.providers.AsyncSendable | ethers.providers.Provider\n\n// type guard for ChainIdOrProvider\nexport function isChainId(chainIdOrProvider: ChainIdOrProvider): chainIdOrProvider is SUPPORTED_CHAIN_ID {\n  const chainId: SUPPORTED_CHAIN_ID = chainIdOrProvider as SUPPORTED_CHAIN_ID\n  return typeof chainId === 'number'\n}\n\n// type guard for ChainIdOrProvider\nexport function isLowLevelProvider(\n  chainIdOrProvider: ChainIdOrProvider\n): chainIdOrProvider is ethers.providers.AsyncSendable {\n  if (isChainId(chainIdOrProvider)) {\n    return false\n  } else {\n    const provider: ethers.providers.AsyncSendable = chainIdOrProvider as ethers.providers.AsyncSendable\n    return 'send' in provider || 'sendAsync' in provider\n  }\n}\n\nexport interface Token {\n  chainId?: SUPPORTED_CHAIN_ID\n  address?: string\n  decimals: number\n}\n\nexport interface TokenAmount {\n  token: Token\n  amount: BigNumberish\n}\n\nexport interface TokenAmountNormalized {\n  token: Token\n  amount: BigNumber\n}\n\nexport interface TokenReserves {\n  token: Token\n  exchange?: Token\n  ethReserve: TokenAmount\n  tokenReserve: TokenAmount\n}\n\nexport interface TokenReservesNormalized {\n  token: Token\n  exchange?: Token\n  ethReserve: TokenAmountNormalized\n  tokenReserve: TokenAmountNormalized\n}\n\nexport interface EthReserves {\n  token: Token\n}\n\n// type for input data\nexport type OptionalReserves = TokenReserves | EthReserves | undefined\n\n// type guard for OptionalReserves\nexport function areTokenReserves(reserves: OptionalReserves): reserves is TokenReserves {\n  const tokenReserves: TokenReserves = reserves as TokenReserves\n  return (\n    tokenReserves !== undefined && tokenReserves.ethReserve !== undefined && tokenReserves.tokenReserve !== undefined\n  )\n}\n\n// type guard for OptionalReserves\nexport function areETHReserves(reserves: OptionalReserves): reserves is EthReserves {\n  const tokenReserves: TokenReserves = reserves as TokenReserves\n  return (\n    tokenReserves !== undefined && tokenReserves.ethReserve === undefined && tokenReserves.tokenReserve === undefined\n  )\n}\n\n// type for output data\nexport type NormalizedReserves = TokenReservesNormalized | EthReserves\n\n// type guard for NormalizedReserves\nexport function areTokenReservesNormalized(reserves: NormalizedReserves): reserves is TokenReservesNormalized {\n  const tokenReservesNormalized: TokenReservesNormalized = reserves as TokenReservesNormalized\n  return tokenReservesNormalized.ethReserve !== undefined && tokenReservesNormalized.tokenReserve !== undefined\n}\n\n//// types for computed data\nexport interface Rate {\n  rate: BigNumber\n  rateInverted: BigNumber\n}\nexport interface MarketDetails {\n  tradeType: TRADE_TYPE\n  inputReserves: NormalizedReserves\n  outputReserves: NormalizedReserves\n  marketRate: Rate\n}\n\nexport interface TradeDetails {\n  marketDetailsPre: MarketDetails\n  marketDetailsPost: MarketDetails\n  tradeType: TRADE_TYPE\n  tradeExact: TRADE_EXACT\n  inputAmount: TokenAmountNormalized\n  outputAmount: TokenAmountNormalized\n  executionRate: Rate\n  marketRateSlippage: BigNumber\n  executionRateSlippage: BigNumber\n}\n\nexport type MethodArgument = BigNumber | number | string\n\nexport interface ExecutionDetails {\n  exchangeAddress: string\n  methodName: string\n  methodId: string\n  value: BigNumber\n  methodArguments: MethodArgument[]\n}\n\n//// types for formatting data\nexport type FlexibleFormat = BigNumber.Format | boolean\n\n// type guard for FlexibleFormat\nexport function isFormat(flexibleFormat: FlexibleFormat): flexibleFormat is BigNumber.Format {\n  const format: BigNumber.Format = flexibleFormat as BigNumber.Format\n  return typeof format !== 'boolean'\n}\n\nexport interface FormatSignificantOptions {\n  significantDigits: number\n  roundingMode: BigNumber.RoundingMode\n  forceIntegerSignificance: boolean\n  format: FlexibleFormat\n}\n\nexport interface FormatFixedOptions {\n  decimalPlaces: number\n  roundingMode: BigNumber.RoundingMode\n  dropTrailingZeros: boolean\n  underflowBehavior: FIXED_UNDERFLOW_BEHAVIOR\n  format: FlexibleFormat\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}