"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = LayoutHead;

var _react = _interopRequireDefault(require("react"));

var _Head = _interopRequireDefault(require("@docusaurus/Head"));

var _useDocusaurusContext = _interopRequireDefault(require("@docusaurus/useDocusaurusContext"));

var _useBaseUrl = _interopRequireDefault(require("@docusaurus/useBaseUrl"));

var _SearchMetadatas = _interopRequireDefault(require("@theme/SearchMetadatas"));

var _themeCommon = require("@docusaurus/theme-common");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function LayoutHead(props) {
  const {
    siteConfig,
    i18n: {
      currentLocale
    }
  } = (0, _useDocusaurusContext.default)();
  const {
    favicon,
    themeConfig: {
      image: defaultImage,
      metadatas
    },
    url: siteUrl
  } = siteConfig;
  const {
    title,
    description,
    image,
    keywords,
    permalink,
    searchMetadatas
  } = props;
  const metaTitle = (0, _themeCommon.useTitleFormatter)(title);
  const metaImage = image || defaultImage;
  const metaImageUrl = (0, _useBaseUrl.default)(metaImage, {
    absolute: true
  });
  const faviconUrl = (0, _useBaseUrl.default)(favicon);
  const htmlLang = currentLocale.split('-')[0];
  return <>
      <_Head.default>
        <html lang={htmlLang} />
        {metaTitle && <title>{metaTitle}</title>}
        {metaTitle && <meta property="og:title" content={metaTitle} />}
        {favicon && <link rel="shortcut icon" href={faviconUrl} />}
        {description && <meta name="description" content={description} />}
        {description && <meta property="og:description" content={description} />}
        {keywords && keywords.length && <meta name="keywords" content={keywords.join(',')} />}
        {metaImage && <meta property="og:image" content={metaImageUrl} />}
        {metaImage && <meta name="twitter:image" content={metaImageUrl} />}
        {metaImage && <meta name="twitter:image:alt" content={`Image for ${metaTitle}`} />}
        {permalink && <meta property="og:url" content={siteUrl + permalink} />}
        {permalink && <link rel="canonical" href={siteUrl + permalink} />}
        <meta name="twitter:card" content="summary_large_image" />
      </_Head.default>

      <_SearchMetadatas.default tag={_themeCommon.DEFAULT_SEARCH_TAG} locale={currentLocale} {...searchMetadatas} />

      <_Head.default // it's important to have an additional <Head> element here,
    // as it allows react-helmet to override values set in previous <Head>
    // ie we can override default metadatas such as "twitter:card"
    // In same Head, the same meta would appear twice instead of overriding
    // See react-helmet doc
    >
        {metadatas.map((metadata, i) => <meta key={`metadata_${i}`} {...metadata} />)}
      </_Head.default>
    </>;
}